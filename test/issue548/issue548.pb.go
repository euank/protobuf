// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: issue548.proto

package issue548

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are valid to be assigned to Kind:
	//	*Request_SessionStatus
	//	*Request_ResourceStatus
	Kind isRequest_Kind `protobuf_oneof:"kind"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_23f51144ce1cba29, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Request.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return m.Size()
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

type isRequest_Kind interface {
	isRequest_Kind()
	MarshalTo([]byte) (int, error)
	Size() int
}

type Request_SessionStatus struct {
	SessionStatus *RequestSessionStatus `protobuf:"bytes,2,opt,name=session_status,json=sessionStatus,proto3,oneof"`
}
type Request_ResourceStatus struct {
	ResourceStatus *RequestResourceStatus `protobuf:"bytes,3,opt,name=resource_status,json=resourceStatus,proto3,oneof"`
}

func (*Request_SessionStatus) isRequest_Kind()  {}
func (*Request_ResourceStatus) isRequest_Kind() {}

func (m *Request) GetKind() isRequest_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *Request) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Request) GetSessionStatus() *RequestSessionStatus {
	if x, ok := m.GetKind().(*Request_SessionStatus); ok {
		return x.SessionStatus
	}
	return nil
}

func (m *Request) GetResourceStatus() *RequestResourceStatus {
	if x, ok := m.GetKind().(*Request_ResourceStatus); ok {
		return x.ResourceStatus
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_SessionStatus)(nil),
		(*Request_ResourceStatus)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// kind
	switch x := m.Kind.(type) {
	case *Request_SessionStatus:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SessionStatus); err != nil {
			return err
		}
	case *Request_ResourceStatus:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ResourceStatus); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Kind has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 2: // kind.session_status
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestSessionStatus)
		err := b.DecodeMessage(msg)
		m.Kind = &Request_SessionStatus{msg}
		return true, err
	case 3: // kind.resource_status
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestResourceStatus)
		err := b.DecodeMessage(msg)
		m.Kind = &Request_ResourceStatus{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// kind
	switch x := m.Kind.(type) {
	case *Request_SessionStatus:
		s := proto.Size(x.SessionStatus)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ResourceStatus:
		s := proto.Size(x.ResourceStatus)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type RequestSessionStatus struct {
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (m *RequestSessionStatus) Reset()         { *m = RequestSessionStatus{} }
func (m *RequestSessionStatus) String() string { return proto.CompactTextString(m) }
func (*RequestSessionStatus) ProtoMessage()    {}
func (*RequestSessionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_23f51144ce1cba29, []int{1}
}
func (m *RequestSessionStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RequestSessionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RequestSessionStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RequestSessionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestSessionStatus.Merge(m, src)
}
func (m *RequestSessionStatus) XXX_Size() int {
	return m.Size()
}
func (m *RequestSessionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestSessionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_RequestSessionStatus proto.InternalMessageInfo

func (m *RequestSessionStatus) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type RequestResourceStatus struct {
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (m *RequestResourceStatus) Reset()         { *m = RequestResourceStatus{} }
func (m *RequestResourceStatus) String() string { return proto.CompactTextString(m) }
func (*RequestResourceStatus) ProtoMessage()    {}
func (*RequestResourceStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_23f51144ce1cba29, []int{2}
}
func (m *RequestResourceStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RequestResourceStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RequestResourceStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RequestResourceStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestResourceStatus.Merge(m, src)
}
func (m *RequestResourceStatus) XXX_Size() int {
	return m.Size()
}
func (m *RequestResourceStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestResourceStatus.DiscardUnknown(m)
}

var xxx_messageInfo_RequestResourceStatus proto.InternalMessageInfo

func (m *RequestResourceStatus) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "issue548.Request")
	proto.RegisterType((*RequestSessionStatus)(nil), "issue548.RequestSessionStatus")
	proto.RegisterType((*RequestResourceStatus)(nil), "issue548.RequestResourceStatus")
}

func init() { proto.RegisterFile("issue548.proto", fileDescriptor_23f51144ce1cba29) }

var fileDescriptor_23f51144ce1cba29 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x2c, 0x2e, 0x2e,
	0x4d, 0x35, 0x35, 0xb1, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0xa5, 0x74,
	0xd3, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0xd3, 0xf3, 0xd3, 0xf3, 0xf5,
	0xc1, 0x0a, 0x92, 0x4a, 0xd3, 0xc0, 0x3c, 0x30, 0x07, 0xcc, 0x82, 0x68, 0x54, 0x3a, 0xca, 0xc8,
	0xc5, 0x1e, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0x24, 0xcb, 0xc5, 0x55, 0x04, 0x61, 0xc6,
	0x67, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x71, 0x42, 0x45, 0x3c, 0x53, 0x84, 0xdc,
	0xb9, 0xf8, 0x8a, 0x53, 0x8b, 0x8b, 0x33, 0xf3, 0xf3, 0xe2, 0x8b, 0x4b, 0x12, 0x4b, 0x4a, 0x8b,
	0x25, 0x98, 0x14, 0x18, 0x35, 0xb8, 0x8d, 0xe4, 0xf4, 0xe0, 0x8e, 0x81, 0x9a, 0x14, 0x0c, 0x51,
	0x16, 0x0c, 0x56, 0xe5, 0xc1, 0x10, 0xc4, 0x5b, 0x8c, 0x2c, 0x20, 0xe4, 0xc5, 0xc5, 0x5f, 0x94,
	0x5a, 0x9c, 0x5f, 0x5a, 0x94, 0x9c, 0x0a, 0x33, 0x89, 0x19, 0x6c, 0x92, 0x3c, 0x86, 0x49, 0x41,
	0x50, 0x75, 0x70, 0xa3, 0xf8, 0x8a, 0x50, 0x44, 0x9c, 0xd8, 0xb8, 0x58, 0xb2, 0x33, 0xf3, 0x52,
	0x94, 0x4c, 0xb9, 0x44, 0xb0, 0x59, 0x0e, 0xf2, 0x13, 0xcc, 0xd1, 0x08, 0x3f, 0x41, 0x45, 0x3c,
	0x53, 0x94, 0x2c, 0xb8, 0x44, 0xb1, 0xda, 0x24, 0x24, 0xcf, 0xc5, 0x0d, 0x77, 0x23, 0x5c, 0x23,
	0x17, 0x4c, 0xc8, 0x33, 0xc5, 0x49, 0xe2, 0xc4, 0x23, 0x39, 0xc6, 0x0b, 0x8f, 0xe4, 0x18, 0x1f,
	0x3c, 0x92, 0x63, 0x9c, 0xf0, 0x58, 0x8e, 0xe1, 0xc2, 0x63, 0x39, 0x86, 0x1b, 0x8f, 0xe5, 0x18,
	0x92, 0xd8, 0xc0, 0x21, 0x6b, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xd0, 0x6f, 0xfd, 0x5c, 0xa4,
	0x01, 0x00, 0x00,
}

func (m *Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Request) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.RequestId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintIssue548(dAtA, i, uint64(len(m.RequestId)))
		i += copy(dAtA[i:], m.RequestId)
	}
	if m.Kind != nil {
		nn1, err := m.Kind.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	return i, nil
}

func (m *Request_SessionStatus) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.SessionStatus != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintIssue548(dAtA, i, uint64(m.SessionStatus.Size()))
		n2, err := m.SessionStatus.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	return i, nil
}
func (m *Request_ResourceStatus) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ResourceStatus != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintIssue548(dAtA, i, uint64(m.ResourceStatus.Size()))
		n3, err := m.ResourceStatus.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	return i, nil
}
func (m *RequestSessionStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RequestSessionStatus) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.SessionId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintIssue548(dAtA, i, uint64(len(m.SessionId)))
		i += copy(dAtA[i:], m.SessionId)
	}
	return i, nil
}

func (m *RequestResourceStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RequestResourceStatus) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ResourceId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintIssue548(dAtA, i, uint64(len(m.ResourceId)))
		i += copy(dAtA[i:], m.ResourceId)
	}
	return i, nil
}

func encodeVarintIssue548(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Request) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RequestId)
	if l > 0 {
		n += 1 + l + sovIssue548(uint64(l))
	}
	if m.Kind != nil {
		n += m.Kind.Size()
	}
	return n
}

func (m *Request_SessionStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SessionStatus != nil {
		l = m.SessionStatus.Size()
		n += 1 + l + sovIssue548(uint64(l))
	}
	return n
}
func (m *Request_ResourceStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ResourceStatus != nil {
		l = m.ResourceStatus.Size()
		n += 1 + l + sovIssue548(uint64(l))
	}
	return n
}
func (m *RequestSessionStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SessionId)
	if l > 0 {
		n += 1 + l + sovIssue548(uint64(l))
	}
	return n
}

func (m *RequestResourceStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceId)
	if l > 0 {
		n += 1 + l + sovIssue548(uint64(l))
	}
	return n
}

func sovIssue548(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozIssue548(x uint64) (n int) {
	return sovIssue548(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIssue548
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIssue548
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIssue548
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIssue548
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIssue548
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIssue548
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIssue548
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RequestSessionStatus{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Kind = &Request_SessionStatus{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIssue548
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIssue548
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIssue548
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RequestResourceStatus{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Kind = &Request_ResourceStatus{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIssue548(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIssue548
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIssue548
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RequestSessionStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIssue548
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RequestSessionStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RequestSessionStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIssue548
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIssue548
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIssue548
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIssue548(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIssue548
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIssue548
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RequestResourceStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIssue548
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RequestResourceStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RequestResourceStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIssue548
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIssue548
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIssue548
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIssue548(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIssue548
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIssue548
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipIssue548(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowIssue548
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowIssue548
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowIssue548
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthIssue548
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthIssue548
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowIssue548
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipIssue548(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthIssue548
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthIssue548 = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowIssue548   = fmt.Errorf("proto: integer overflow")
)
