// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: issue438.proto

package issue438

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import types "github.com/gogo/protobuf/types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Types struct {
	Any *types.Any           `protobuf:"bytes,1,opt,name=any" json:"any,omitempty"`
	Api *types.Api           `protobuf:"bytes,2,opt,name=api" json:"api,omitempty"`
	Met *types.Method        `protobuf:"bytes,3,opt,name=met" json:"met,omitempty"`
	Mx  *types.Mixin         `protobuf:"bytes,4,opt,name=mx" json:"mx,omitempty"`
	Dur *types.Duration      `protobuf:"bytes,5,opt,name=dur" json:"dur,omitempty"`
	Em  *types.Empty         `protobuf:"bytes,6,opt,name=em" json:"em,omitempty"`
	Fm  *types.FieldMask     `protobuf:"bytes,7,opt,name=fm" json:"fm,omitempty"`
	Sc  *types.SourceContext `protobuf:"bytes,8,opt,name=sc" json:"sc,omitempty"`
	St  *types.Struct        `protobuf:"bytes,9,opt,name=st" json:"st,omitempty"`
	// Value depends on interface fieldtypes
	Val *types.Value `protobuf:"bytes,10,opt,name=val" json:"val,omitempty"`
	// Unsure how to reference these
	// google.protobuf.NullValue nlval = 11;
	// google.protobuf.NumberValue nrval = 12;
	// google.protobuf.StringValue stval = 13;
	// google.protobuf.BoolValue bval = 14;
	// google.protobuf.StructValue strval = 15;
	// google.protobuf.ListValue lstv = 16;
	Ts                   *types.Timestamp   `protobuf:"bytes,17,opt,name=ts" json:"ts,omitempty"`
	T                    *types.Type        `protobuf:"bytes,18,opt,name=t" json:"t,omitempty"`
	F                    *types.Field       `protobuf:"bytes,19,opt,name=f" json:"f,omitempty"`
	En                   *types.Enum        `protobuf:"bytes,20,opt,name=en" json:"en,omitempty"`
	Enval                *types.EnumValue   `protobuf:"bytes,21,opt,name=enval" json:"enval,omitempty"`
	Opt                  *types.Option      `protobuf:"bytes,22,opt,name=opt" json:"opt,omitempty"`
	Dbl                  *types.DoubleValue `protobuf:"bytes,23,opt,name=dbl" json:"dbl,omitempty"`
	Flt                  *types.FloatValue  `protobuf:"bytes,24,opt,name=flt" json:"flt,omitempty"`
	I64                  *types.Int64Value  `protobuf:"bytes,25,opt,name=i64" json:"i64,omitempty"`
	U64                  *types.UInt64Value `protobuf:"bytes,26,opt,name=u64" json:"u64,omitempty"`
	I32                  *types.Int32Value  `protobuf:"bytes,27,opt,name=i32" json:"i32,omitempty"`
	U32                  *types.UInt32Value `protobuf:"bytes,28,opt,name=u32" json:"u32,omitempty"`
	Bool                 *types.BoolValue   `protobuf:"bytes,29,opt,name=bool" json:"bool,omitempty"`
	Str                  *types.StringValue `protobuf:"bytes,30,opt,name=str" json:"str,omitempty"`
	Bytes                *types.BytesValue  `protobuf:"bytes,31,opt,name=bytes" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Types) Reset()         { *m = Types{} }
func (m *Types) String() string { return proto.CompactTextString(m) }
func (*Types) ProtoMessage()    {}
func (*Types) Descriptor() ([]byte, []int) {
	return fileDescriptor_issue438_55f5d3100d48977f, []int{0}
}
func (m *Types) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Types.Unmarshal(m, b)
}
func (m *Types) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Types.Marshal(b, m, deterministic)
}
func (dst *Types) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Types.Merge(dst, src)
}
func (m *Types) XXX_Size() int {
	return xxx_messageInfo_Types.Size(m)
}
func (m *Types) XXX_DiscardUnknown() {
	xxx_messageInfo_Types.DiscardUnknown(m)
}

var xxx_messageInfo_Types proto.InternalMessageInfo

func (m *Types) GetAny() *types.Any {
	if m != nil {
		return m.Any
	}
	return nil
}

func (m *Types) GetApi() *types.Api {
	if m != nil {
		return m.Api
	}
	return nil
}

func (m *Types) GetMet() *types.Method {
	if m != nil {
		return m.Met
	}
	return nil
}

func (m *Types) GetMx() *types.Mixin {
	if m != nil {
		return m.Mx
	}
	return nil
}

func (m *Types) GetDur() *types.Duration {
	if m != nil {
		return m.Dur
	}
	return nil
}

func (m *Types) GetEm() *types.Empty {
	if m != nil {
		return m.Em
	}
	return nil
}

func (m *Types) GetFm() *types.FieldMask {
	if m != nil {
		return m.Fm
	}
	return nil
}

func (m *Types) GetSc() *types.SourceContext {
	if m != nil {
		return m.Sc
	}
	return nil
}

func (m *Types) GetSt() *types.Struct {
	if m != nil {
		return m.St
	}
	return nil
}

func (m *Types) GetVal() *types.Value {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *Types) GetTs() *types.Timestamp {
	if m != nil {
		return m.Ts
	}
	return nil
}

func (m *Types) GetT() *types.Type {
	if m != nil {
		return m.T
	}
	return nil
}

func (m *Types) GetF() *types.Field {
	if m != nil {
		return m.F
	}
	return nil
}

func (m *Types) GetEn() *types.Enum {
	if m != nil {
		return m.En
	}
	return nil
}

func (m *Types) GetEnval() *types.EnumValue {
	if m != nil {
		return m.Enval
	}
	return nil
}

func (m *Types) GetOpt() *types.Option {
	if m != nil {
		return m.Opt
	}
	return nil
}

func (m *Types) GetDbl() *types.DoubleValue {
	if m != nil {
		return m.Dbl
	}
	return nil
}

func (m *Types) GetFlt() *types.FloatValue {
	if m != nil {
		return m.Flt
	}
	return nil
}

func (m *Types) GetI64() *types.Int64Value {
	if m != nil {
		return m.I64
	}
	return nil
}

func (m *Types) GetU64() *types.UInt64Value {
	if m != nil {
		return m.U64
	}
	return nil
}

func (m *Types) GetI32() *types.Int32Value {
	if m != nil {
		return m.I32
	}
	return nil
}

func (m *Types) GetU32() *types.UInt32Value {
	if m != nil {
		return m.U32
	}
	return nil
}

func (m *Types) GetBool() *types.BoolValue {
	if m != nil {
		return m.Bool
	}
	return nil
}

func (m *Types) GetStr() *types.StringValue {
	if m != nil {
		return m.Str
	}
	return nil
}

func (m *Types) GetBytes() *types.BytesValue {
	if m != nil {
		return m.Bytes
	}
	return nil
}

func init() {
	proto.RegisterType((*Types)(nil), "issue438.Types")
}
func (m *Types) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Any != nil {
		l = m.Any.ProtoSize()
		n += 1 + l + sovIssue438(uint64(l))
	}
	if m.Api != nil {
		l = m.Api.ProtoSize()
		n += 1 + l + sovIssue438(uint64(l))
	}
	if m.Met != nil {
		l = m.Met.ProtoSize()
		n += 1 + l + sovIssue438(uint64(l))
	}
	if m.Mx != nil {
		l = m.Mx.ProtoSize()
		n += 1 + l + sovIssue438(uint64(l))
	}
	if m.Dur != nil {
		l = m.Dur.ProtoSize()
		n += 1 + l + sovIssue438(uint64(l))
	}
	if m.Em != nil {
		l = m.Em.ProtoSize()
		n += 1 + l + sovIssue438(uint64(l))
	}
	if m.Fm != nil {
		l = m.Fm.ProtoSize()
		n += 1 + l + sovIssue438(uint64(l))
	}
	if m.Sc != nil {
		l = m.Sc.ProtoSize()
		n += 1 + l + sovIssue438(uint64(l))
	}
	if m.St != nil {
		l = m.St.ProtoSize()
		n += 1 + l + sovIssue438(uint64(l))
	}
	if m.Val != nil {
		l = m.Val.ProtoSize()
		n += 1 + l + sovIssue438(uint64(l))
	}
	if m.Ts != nil {
		l = m.Ts.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.T != nil {
		l = m.T.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.F != nil {
		l = m.F.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.En != nil {
		l = m.En.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.Enval != nil {
		l = m.Enval.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.Opt != nil {
		l = m.Opt.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.Dbl != nil {
		l = m.Dbl.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.Flt != nil {
		l = m.Flt.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.I64 != nil {
		l = m.I64.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.U64 != nil {
		l = m.U64.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.I32 != nil {
		l = m.I32.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.U32 != nil {
		l = m.U32.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.Bool != nil {
		l = m.Bool.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.Str != nil {
		l = m.Str.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.Bytes != nil {
		l = m.Bytes.ProtoSize()
		n += 2 + l + sovIssue438(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovIssue438(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozIssue438(x uint64) (n int) {
	return sovIssue438(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

func init() { proto.RegisterFile("issue438.proto", fileDescriptor_issue438_55f5d3100d48977f) }

var fileDescriptor_issue438_55f5d3100d48977f = []byte{
	// 609 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0xd2, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x07, 0x70, 0x92, 0xac, 0xa3, 0x18, 0x09, 0x09, 0xb3, 0x0f, 0xaf, 0x1b, 0xdd, 0x04, 0x63,
	0x0c, 0xd0, 0x32, 0x68, 0xab, 0x8a, 0x5b, 0x06, 0x43, 0xe2, 0x62, 0x42, 0x72, 0x07, 0xb7, 0x53,
	0xd2, 0x3a, 0x9d, 0xb5, 0x38, 0xb6, 0xe2, 0x63, 0x68, 0xde, 0x86, 0xd7, 0xe2, 0x0e, 0xc1, 0x8b,
	0x20, 0x3b, 0x29, 0xa0, 0x46, 0xe6, 0xae, 0xd6, 0xf9, 0xf9, 0xdf, 0x73, 0x7c, 0x82, 0xee, 0x71,
	0xad, 0x0d, 0x1b, 0x0d, 0x5f, 0xc7, 0xaa, 0x94, 0x20, 0x71, 0x77, 0x79, 0xee, 0x9d, 0xcc, 0x39,
	0x5c, 0x9b, 0x34, 0x9e, 0x4a, 0x71, 0x3a, 0x97, 0x73, 0x79, 0xea, 0x40, 0x6a, 0x32, 0x77, 0x72,
	0x07, 0xf7, 0xab, 0xbe, 0xd8, 0xdb, 0x99, 0x4b, 0x39, 0xcf, 0xd9, 0x5f, 0x95, 0x14, 0x95, 0xb7,
	0xa4, 0x78, 0x53, 0xea, 0xaf, 0x96, 0x66, 0xa6, 0x4c, 0x80, 0xcb, 0xa2, 0xa9, 0xef, 0xae, 0xd6,
	0x99, 0x50, 0xb0, 0xcc, 0x3d, 0x58, 0x2d, 0x66, 0x9c, 0xe5, 0xb3, 0x2b, 0x91, 0xe8, 0x9b, 0x46,
	0x1c, 0xae, 0x0a, 0x2d, 0x4d, 0x39, 0x65, 0x57, 0x53, 0x59, 0x00, 0x5b, 0x40, 0xa3, 0xf6, 0x5a,
	0x0a, 0x4a, 0x33, 0x5d, 0x56, 0xf7, 0x57, 0xab, 0xc0, 0x05, 0xd3, 0x90, 0x08, 0xd5, 0x80, 0x5e,
	0x0b, 0x54, 0x8a, 0xf9, 0xe6, 0xfb, 0x5a, 0x26, 0x4a, 0xb1, 0x52, 0xd7, 0xf5, 0x47, 0xdf, 0xbb,
	0xa8, 0x73, 0x59, 0x29, 0xa6, 0xf1, 0x11, 0x8a, 0x92, 0xa2, 0x22, 0xc1, 0x41, 0x70, 0x7c, 0x77,
	0xb0, 0x11, 0xd7, 0xf7, 0xe2, 0xe5, 0xbd, 0xf8, 0x4d, 0x51, 0x51, 0x0b, 0x9c, 0x53, 0x9c, 0x84,
	0x3e, 0xa7, 0x38, 0xb5, 0x00, 0x3f, 0x43, 0x91, 0x60, 0x40, 0x22, 0xe7, 0xb6, 0x5b, 0xee, 0x82,
	0xc1, 0xb5, 0x9c, 0x51, 0x6b, 0xf0, 0x11, 0x0a, 0xc5, 0x82, 0xac, 0x39, 0xb9, 0xd5, 0x96, 0x7c,
	0xc1, 0x0b, 0x1a, 0x8a, 0x05, 0x7e, 0x81, 0xa2, 0x99, 0x29, 0x49, 0xc7, 0xc1, 0x9d, 0x16, 0x7c,
	0xd7, 0xac, 0x8e, 0x5a, 0x65, 0x43, 0x99, 0x20, 0xeb, 0x9e, 0xd0, 0x73, 0xbb, 0x46, 0x1a, 0x32,
	0x81, 0x9f, 0xa3, 0x30, 0x13, 0xe4, 0xb6, 0x73, 0xbd, 0x96, 0x7b, 0x6f, 0x37, 0x7a, 0x91, 0xe8,
	0x1b, 0x1a, 0x66, 0x02, 0xc7, 0x28, 0xd4, 0x53, 0xd2, 0x75, 0xb6, 0xdf, 0xb2, 0x13, 0xb7, 0xdb,
	0xb7, 0xf5, 0x6a, 0x69, 0xa8, 0xa7, 0xf8, 0x29, 0x0a, 0x35, 0x90, 0x3b, 0x9e, 0x27, 0x98, 0xb8,
	0x2d, 0xd3, 0x50, 0x03, 0x3e, 0x46, 0xd1, 0x97, 0x24, 0x27, 0xc8, 0xd3, 0xed, 0xe7, 0x24, 0x37,
	0x8c, 0x5a, 0x62, 0xdb, 0x05, 0x4d, 0xee, 0x7b, 0xda, 0xbd, 0x5c, 0x7e, 0x1a, 0x34, 0x04, 0x8d,
	0x1f, 0xa3, 0x00, 0x08, 0x76, 0x74, 0xb3, 0x4d, 0x2b, 0xc5, 0x68, 0x00, 0xf8, 0x10, 0x05, 0x19,
	0x79, 0xe0, 0xf9, 0x63, 0x37, 0x3e, 0x0d, 0x32, 0xfc, 0x04, 0x85, 0xac, 0x20, 0x1b, 0x9e, 0xac,
	0xf3, 0xc2, 0x08, 0x1a, 0xb2, 0x02, 0xbf, 0x44, 0x1d, 0x56, 0xd8, 0x49, 0x36, 0x3d, 0x0d, 0x5a,
	0x59, 0x4f, 0x53, 0x43, 0xfb, 0x99, 0x48, 0x05, 0x64, 0xcb, 0xf3, 0x46, 0x1f, 0x55, 0xbd, 0x51,
	0xa9, 0x00, 0xc7, 0x28, 0x9a, 0xa5, 0x39, 0xd9, 0x76, 0x74, 0xaf, 0xbd, 0x7e, 0x69, 0xd2, 0x9c,
	0x35, 0x4f, 0x35, 0x4b, 0x73, 0x7c, 0x82, 0xa2, 0x2c, 0x07, 0x42, 0x9c, 0xdf, 0x6d, 0xcf, 0x96,
	0xcb, 0x04, 0x1a, 0x9e, 0xe5, 0x60, 0x39, 0x1f, 0x8f, 0xc8, 0x8e, 0x87, 0x7f, 0x28, 0x60, 0x3c,
	0x6a, 0x38, 0x1f, 0x8f, 0x6c, 0x37, 0x66, 0x3c, 0x22, 0x3d, 0x4f, 0x37, 0x9f, 0xfe, 0xf5, 0x66,
	0x3c, 0x72, 0xf1, 0xc3, 0x01, 0xd9, 0xf5, 0xc7, 0x0f, 0x07, 0xcb, 0xf8, 0xe1, 0xc0, 0xc5, 0x0f,
	0x07, 0x64, 0xef, 0x3f, 0xf1, 0x7f, 0xbc, 0x71, 0x7e, 0x2d, 0x95, 0x32, 0x27, 0x0f, 0x3d, 0x0f,
	0x7f, 0x26, 0x65, 0x5e, 0x73, 0xe7, 0x6c, 0xbe, 0x86, 0x92, 0xf4, 0x3d, 0xf9, 0x13, 0x28, 0x79,
	0x31, 0x6f, 0xf2, 0x35, 0x94, 0xf8, 0x15, 0xea, 0xa4, 0x15, 0x30, 0x4d, 0xf6, 0x3d, 0x03, 0x9c,
	0xd9, 0x6a, 0xb3, 0x5a, 0x27, 0xcf, 0xba, 0x3f, 0x7e, 0xf6, 0x6f, 0x7d, 0xfb, 0xd5, 0x0f, 0xd2,
	0x75, 0xa7, 0x86, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x61, 0xbe, 0x39, 0x6e, 0xed, 0x05, 0x00,
	0x00,
}
